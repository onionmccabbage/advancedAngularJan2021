Advanced Angular

Toby Dussek

Tues
> intro
> writing code together
> best practices and performance
> interpolation {{}}
> generating stuff
> pipes
> components, modules etc
> bindings
> architectural
> complete the routing
> compare... ways to pass data around in an app
> input/output/event
> content projection
> Review Exercise
> how to migrate from older angular

~ tilde
^ caret

> *ngIf or [disabled]= also consider [hidden]=

q
> asynchronous operations
> rxjs
> crawling angular apps - this relates to aot and Ivy
> performance e.g. ngFor will affect the DOM - choose when to update the screen
> CAREFUL with imports - angular/core etc...
> ngTemplate, ngContainer and ngContent docs: https://angular.io/guide/structural-directives

Weds
> finish Content Projection ex.
> brief review
> HttpClient Module (replaces earlier Http Module)
> Services
> async pipe
> subscription: every subscription is destroyed when component is destroyed
> manually unsubscribe too
> life-cycle events
> change detection
- Forms
> Review Exercise
> rxjs, combining data
> question - the 'magic' of observables

Thurs
> Ivy: much better tree-shaking, new DI, faster/smaller code modules, no need for app.module etc.
> Libraries
- Testing unit e2e
  see https://github.com/juristr/angular-testing-recipes
  (download it, unzip it, npm install...)
- snapshots in tests
- publish - production - look at the generated code esp js, also aot and jit
? locale (if time)
> cache-busting
> obfuscated (obfuscation)
> closure
- Review Exercise
- end of course feedback